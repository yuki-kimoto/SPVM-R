class TestCase::R::DataFrame {
  
  use R::OP::Int as IOP;
  use R::DataFrame;
  
  static method new : int () { return 1; }
  static method colnames : int () { return 1; }
  static method exists_col : int () { return 1; }
  static method colname : int () { return 1; }
  static method colindex : int () { return 1; }
  static method col_by_index : int () { return 1; }
  static method first_col : int () { return 1; }
  static method col : int () { return 1; }
  static method set_col : int () { return 1; }
  static method insert_col : int () { return 1; }
  static method remove_col : int () { return 1; }
  static method ncol : int () { return 1; }
  static method nrow : int () { return 1; }
  static method clone : int () { return 1; }
  static method to_string : int () { return 1; }
  static method slice : int () { return 1; }
  static method set_order : int () { return 1; }
  
  static method sort : int () {
    {
      my $data_frame = R::DataFrame->new;
      
      $data_frame->set_col("Name1", IOP->c([3, 3, 1, 1, 2, 2]));
      $data_frame->set_col("Name2", my $col2 = IOP->c([5, 6, 3, 4, 1, 2]));
      
      $data_frame->sort(["Name2"]);
      
      unless (Array->equals_int($data_frame->col("Name1")->(R::NDArray::Int)->data, [2, 2, 1, 1, 3, 3])) {
        return 0;
      }
      
      unless (Array->equals_int($data_frame->col("Name2")->(R::NDArray::Int)->data, [1, 2, 3, 4, 5, 6])) {
        return 0;
      }
      
    }
    
    {
      my $data_frame = R::DataFrame->new;
      
      $data_frame->set_col("Name1", IOP->c([3, 3, 1, 1, 2, 2]));
      $data_frame->set_col("Name2", my $col2 = IOP->c([5, 6, 3, 4, 1, 2]));
      
      $data_frame->sort(["Name2 desc"]);
      
      unless (Array->equals_int($data_frame->col("Name1")->(R::NDArray::Int)->data, [3, 3, 1, 1, 2, 2])) {
        return 0;
      }
      
      unless (Array->equals_int($data_frame->col("Name2")->(R::NDArray::Int)->data, [6, 5, 4, 3, 2, 1])) {
        return 0;
      }
      
    }
    
    return 1;
  }
  
  static method order : int () { return 1; }
}
