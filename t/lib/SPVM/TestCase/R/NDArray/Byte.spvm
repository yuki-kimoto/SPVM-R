class TestCase::R::NDArray::Byte {
  
  use R::NDArray::Byte;
  
  static method data : int () {
    
    my $data = [(byte)1, 2, 3];
    my $dim = [1, 3];
    my $ndarray = R::NDArray::Byte->new({data => $data, dim => [1, 3]});
    
    unless ($ndarray->data == $data) {
      return 0;
    }
    
    unless (Array->equals_int($ndarray->dim, [1, 3])) {
      return 0;
    }
    
    return 1;
  }
  
  static method new : int () { return 1; }
  
  static method create_default_data : int () { return 1; }
  
  static method elem_to_string : int () { return 1; }
  
  static method elem_assign : int () { return 1; }
  
  static method elem_clone : int () { return 1; }
  
  static method elem_cmp : int () { return 1; }
  
  static method clone : int () { return 1; }
  
  static method slice : int () { return 1; }
  
  static method to_int_ndarray : int () { return 1; }
  
}
