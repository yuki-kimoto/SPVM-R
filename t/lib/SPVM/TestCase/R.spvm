class TestCase::R {
  use R;
  use R::NDArray;
  use R::NDArray::Int;
  use R::NDArray::Long;
  use R::NDArray::Float;
  use R::NDArray::Double;
  use R::NDArray::FloatComplex;
  use R::NDArray::DoubleComplex;
  
  use R::NDArray::Byte;
  use R::NDArray::Short;
  use R::NDArray::String;
  use R::NDArray::StringBuffer;
  use R::NDArray::Time::Piece;
  
  use R::OP;
  use R::OP::Int;
  use R::OP::Long;
  use R::OP::Float;
  use R::OP::Double;
  use R::OP::FloatComplex;
  use R::OP::DoubleComplex;
  
  use R::OP::Byte;
  use R::OP::Short;
  use R::OP::String;
  use R::OP::StringBuffer;
  use R::OP::Time::Piece;
  
  use R::DataFrame;
  use R::OP::Matrix;
  use R::OP::DataFrame;
  
  static method test : int () {
    
    {
      my $data = [1, 2, 3];
      my $ndarray = R::NDArray::Int->new({data => $data});
      
      
    }

=pod

  data => [
    1,
    2,
    3
  ] : int[](0x55614f2fb8d0),
  element_size => 4,
  is_numeric => 1,
  type => "int",
  dim => [
    3
  ] : int[](0x55614f2eb450),
  is_dim_read_only => 0

=cut
    
    
    return 1;
  }
}
