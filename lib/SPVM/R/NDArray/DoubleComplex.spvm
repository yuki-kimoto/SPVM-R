# Copyright (c) 2024 Yuki Kimoto
# MIT License

class R::NDArray::DoubleComplex extends R::NDArray {
  
  use Complex_2d;
  
  # Class Mehtods
  static method new : R::NDArray::DoubleComplex ($options : object[] = undef) {
    
    my $self = new R::NDArray::DoubleComplex;
    
    $self->init($options);
    
    return $self;
  }
  
  protected method init : void ($options : object[] = undef) {
    
    $options = Fn->merge_options($options, {item_size => 16, type => "double_complex"});
    
    $self->SUPER::init($options);
  }
  
  method data : Complex_2d[] () {
    
    return (Complex_2d[])$self->{data};
  }
  
  protected method check_data : void () {
    
    my $data = (Complex_2d[])$self->{data};
    
    my $length = $self->{length};
    
    unless (@$data == $length) {
      die "The length of data field must be the same as length field.";
    }
  }
  
}
