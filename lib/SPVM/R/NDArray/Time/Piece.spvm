# Copyright (c) 2024 Yuki Kimoto
# MIT License

class R::NDArray::Time::Piece extends R::NDArray {
  
  use Fn;
  use Array;
  use Time::Piece;
  
  # Class Mehtods
  static method new : R::NDArray::Time::Piece ($options : object[] = undef) {
    
    my $self = new R::NDArray::Time::Piece;
    
    $self->init($options);
    
    return $self;
  }
  
  protected method init : void ($options : object[] = undef) {
    
    my $item_size = Fn->sizeof_native_pointer;
    
    $options = Fn->merge_options($options, {item_size => $item_size, type => "Time::Piece"});
    
    $self->SUPER::init($options);
  }
  
  method data : Time::Piece[] () {
    
    return (Time::Piece[])$self->{data};
  }
  
  protected method check_data : void () {
    
    my $data = (Time::Piece[])$self->{data};
    
    my $length = $self->{length};
    
    unless (@$data == $length) {
      die "The length of data field must be the same as length field.";
    }
  }
  
}
