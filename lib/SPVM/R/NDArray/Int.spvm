# Copyright (c) 2024 Yuki Kimoto
# MIT License

class R::NDArray::Int extends R::NDArray {
  
  # Class Mehtods
  static method new : R::NDArray::Int ($options : object[] = undef) {
    
    my $self = new R::NDArray::Int;
    
    $self->init($options);
    
    return $self;
  }
  
  protected method init : void ($options : object[] = undef) {
    
    $options = Fn->merge_options($options, {element_size => 4, type => "int", is_numeric => 1});
    
    $self->SUPER::init($options);
  }
  
  method data : int[] () {
    
    return (int[])$self->{data};
  }
  
  protected method check : void () {
    
    my $data = (int[])$self->{data};
    
    my $length = $self->length;
    
    unless (@$data == $length) {
      die "The length of data field must be the same as length field.";
    }
  }
  
  protected method create_default_data : int[] ($length : int) {
    
    unless ($length >= 0) {
      die "The length \$length must be more than or equal to 0.";
    }
    
    my $data = new int[$length];
    
    return $data;
  }
  
  method clone : R::NDArray::Int () {
    return (R::NDArray::Int)$self->SUPER::clone;
  }
  
  method element_to_string : string ($data_index : int) {
    my $data = $self->data;
    
    my $element = $data->[$data_index];
    
    my $string = (string)(int)$element;
    
    return $string;
  }
  
}
