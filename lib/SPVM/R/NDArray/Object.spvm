# Copyright (c) 2024 Yuki Kimoto
# MIT License

class R::NDArray::Object extends R::NDArray {
  
  # Fields
  method data : object[] () {
    
    return (object[])$self->{data};
  }
  
  # Class Methods
  static method new : R::NDArray::Object ($options : object[] = undef) {
    
    my $self = new R::NDArray::Object;
    
    $self->init($options);
    
    return $self;
  }
  
  method elem_assign : void ($dist_data : object[], $dist_data_index : int, $src_data : object[], $src_data_index : int) {
    
    $dist_data->[$dist_data_index] = $src_data->[$src_data_index];
  }
  
  method clone : R::NDArray::Object ($elem_shallow_clone : int = 0) {
    return (R::NDArray::Object)$self->SUPER::clone($elem_shallow_clone);
  }
  
  method create_default_data : object[] ($length : int = 0) {
    
    unless ($length >= 0) {
      die "The length \$length must be more than or equal to 0.";
    }
    
    my $data = new object[$length];
    
    return $data;
  }
  
  method slice : R::NDArray::Object ($vector_indexes : R::NDArray::Int[]) {
    return (R::NDArray::Object)$self->SUPER::slice($vector_indexes);
  }
  
}
