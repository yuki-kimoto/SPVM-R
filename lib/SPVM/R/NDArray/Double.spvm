# Copyright (c) 2024 Yuki Kimoto
# MIT License

class R::NDArray::Double extends R::NDArray {
  
  # Class Mehtods
  static method new : R::NDArray::Double ($options : object[] = undef) {
    
    my $self = new R::NDArray::Double;
    
    $self->init($options);
    
    return $self;
  }
  
  protected method init : void ($options : object[] = undef) {
    
    $options = Fn->merge_options($options, {element_size => 8, type => "double", is_numeric => 1});
    
    $self->SUPER::init($options);
  }
  
  method data : double[] () {
    
    return (double[])$self->{data};
  }
  
  protected method check : void () {
    
    my $data = (double[])$self->{data};
    
    my $length = $self->length;
    
    unless (@$data == $length) {
      die "The length of data field must be the same as length field.";
    }
  }
  
  protected method create_default_data : double[] ($length : int) {
    
    unless ($length >= 0) {
      die "The length \$length must be more than or equal to 0.";
    }
    
    my $data = new double[$length];
    
    return $data;
  }
  
  method clone : R::NDArray::Double () {
    return (R::NDArray::Double)$self->SUPER::clone;
  }
  
  method element_to_string : string ($element_ref : double[]) {
    
    my $string = (string)(double)$element_ref->[0];
    
    return $string;
  }
  
}
